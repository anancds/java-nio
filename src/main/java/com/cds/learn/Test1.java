package com.cds.learn;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class Test1 {


    private static double[] a =
        {0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.04743};

    private static double[] b =
        {0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436,
            0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.047436, 0.04743};



    private static List<double[]> list = new ArrayList<>();
    private static List<Double> list_a = new ArrayList<>();

    private static double fun(double[] a, double[] b) {
        int lenth = 200;
        int res = 0;
        double norm_a = 0.465464;
        double norm_b = 0.45436;
        for (int j = 0; j < lenth; j++) {
            res += (a[j] * b[j]);

        }
        return res / Math.sqrt(norm_a * norm_b);
    }


    public static void main(String[] args) throws InterruptedException {

        Random random = new Random();
        random.nextDouble();


        for (int i = 0; i < 1000000; i++) {

		double[] a = new double[200];
		
            for (int j = 0; j < 200; j++) {
                a[j] = random.nextDouble();
            }
            list.add(a);
        }

        for (int i = 0; i < 250000; i++) {

            list_a.add(random.nextDouble());
        }


        long start = System.currentTimeMillis();

        ExecutorService executorService = Executors.newFixedThreadPool(8);
        executorService.submit(new Runnable() {
            @Override public void run() {
                for (int i = 0; i < 10000000; i++) {
//                    int lenth = 200;
//                    int res = 0;
//                    double norm_a = 0.465464;
//                    double norm_b = 0.45436;
//                    double[] data = list.get(i);
//                    for (int j = 0; j < lenth; j++) {
//                        res += (data[j] * b[j]);
//
//                        //                                        norm_a += Math.pow(a[j], a[j]);
//                        //                                        norm_b += Math.pow(b[j], b[j]);
//                    }
//
//                    Double c = res / Math.sqrt(norm_a * norm_b);

                    fun(list.get(i), b);
                }
            }
        });

        executorService.shutdown();
        executorService.awaitTermination(300, TimeUnit.SECONDS);

        Collections.sort(list_a);
        System.out.println((System.currentTimeMillis() - start));
    }
}
